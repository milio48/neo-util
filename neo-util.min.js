!function(){"use strict";let e=null;function t(){const e={title:document.title,homepageUrl:null,url:window.location.href};try{const t=document.querySelector("header.neo-site-header h1 a");t&&(e.title=t.textContent.trim()||e.title,e.homepageUrl=t.href||null)}catch(e){console.error("neo-parser: Error getting basic blog info.",e)}return e}function n(e=document){const t=e.querySelector("#neo-data-table-posts");if(!t)return[];const n=t.querySelectorAll("tbody tr"),o=[];return n.forEach((e=>{const t=e.querySelectorAll("td");if((1!==t.length||!t[0].hasAttribute("colspan"))&&9===t.length)try{const n={postId:e.dataset.postId||t[0]?.textContent.trim()||null,title:t[1]?.textContent.trim()||"",url:t[2]?.textContent.trim()||"",publishedIso:t[3]?.querySelector("time")?.getAttribute("datetime")||t[3]?.textContent.trim()||"",publishedFormatted:t[4]?.textContent.trim()||"",author:t[5]?.textContent.trim()||"",labels:[],snippet:t[7]?.textContent.trim()||"",firstImageUrl:null},r=t[6]?.querySelectorAll("li");r&&(n.labels=Array.from(r).map((e=>({name:e.getAttribute("neo-label-name")||e.textContent.trim(),url:e.getAttribute("data-label-url")||null}))));const a=t[8]?.textContent.trim();a&&"(No image)"!==a&&(n.firstImageUrl=a),o.push(n)}catch(t){console.warn("neo-parser: Error parsing cells in table row:",t,e)}})),o}function o(){if("loading"===document.readyState)return console.error("neo-parser: Cannot parse, DOM is not ready. Call neoApi() after DOMContentLoaded."),{blog:{title:document.title,url:window.location.href},pageType:"parsing_error",page:{error:"DOM not ready during parse attempt."}};let e={blog:{},pageType:"unknown",page:null};try{switch(e.blog=t(),e.pageType=(o=e.blog.homepageUrl,document.querySelector("div.neo-homepage-data")?"homepage":document.querySelector("article.neo-post[itemscope]")?"item":document.querySelector("div.neo-custom-page")?"static_page":document.querySelector("div.neo-archive-data")?"archive":document.querySelector("div.neo-index-data")?"index":document.querySelector("div.neo-error-page")?"error":document.querySelector("div.neo-unknown-page")?"unknown":o&&window.location.href===o&&document.getElementById("neo-data-table-posts")?"homepage":document.getElementById("neo-data-table-posts")?"index":"unknown"),e.pageType){case"homepage":case"archive":case"index":const t=function(e){const t={title:document.title,posts:[],subType:e,nameOrQuery:null};let o=null;switch(e){case"homepage":o=".neo-homepage-data";break;case"archive":o=".neo-archive-data",t.subType="archive";break;case"index":o=".neo-index-data"}const r=o?document.querySelector(o):document;if(!r)return console.warn(`neo-parser: Container not found for page type ${e}. Parsing table globally.`),t.posts=n(document),t;const a=r.querySelector("h2");if(a){if(t.title=a.textContent.trim(),"archive"===e){const e=t.title.match(/^Archive:\s*(.*?)\s*-\s*Post Data$/i);t.nameOrQuery=e?e[1]:null}else if("index"===e){const e=t.title.match(/^Search Results:\s*"(.*?)"\s*-\s*Post Data$/i),n=t.title.match(/^Label:\s*(.*?)\s*-\s*Post Data$/i);e?(t.subType="search",t.nameOrQuery=e[1]):n&&(t.subType="label",t.nameOrQuery=n[1])}}else r!==document&&console.warn(`neo-parser: Title element (h2) not found in ${o}.`);return t.posts=n(r),t}(e.pageType);e.page=t.posts,"index"===e.pageType?(e.pageType=t.subType,"label"===t.subType?e.blog.pageName=t.nameOrQuery:e.blog.searchQuery=t.nameOrQuery):"archive"===e.pageType&&(e.blog.pageName=t.nameOrQuery),e.blog.pageTitle=t.title;break;case"item":e.page=function(){const e=document.querySelector("article.neo-post[itemscope]");if(!e)return null;const t={},n=e.querySelector('div[itemprop="articleBody"]'),o=e.querySelector('time[itemprop="datePublished"]'),r=e.querySelectorAll('.neo-post-labels a[itemprop="keywords"]');return t.postId=n?.id?.replace("neo-post-body-","")||null,t.title=e.querySelector('h1[itemprop="headline"]')?.textContent.trim()||document.title,t.url=window.location.href,t.publishedIso=o?.getAttribute("datetime")||"",t.publishedFormatted=o?.textContent.trim()||"",t.labels=r?Array.from(r).map((e=>({name:e.textContent.trim(),url:e.href||null}))):[],t.bodyHtml=n?.innerHTML||"",t}(),e.blog.pageTitle=e.page?.title||document.title;break;case"static_page":e.page=function(){const e=document.querySelector("div.neo-custom-page");if(!e)return null;const t={},n=e.querySelector("div.neo-page-content");return t.pageId=n?.id?.replace("neo-post-body-","")||null,t.title=e.querySelector("h1.neo-page-title")?.textContent.trim()||document.title,t.url=window.location.href,t.bodyHtml=n?.innerHTML||"",t}(),e.blog.pageTitle=e.page?.title||document.title;break;case"error":e.page=function(){const e=document.querySelector("div.neo-error-page");return{title:e?.querySelector("h1")?.textContent.trim()||"Error",message:e?.querySelector("p")?.textContent.trim()||"Page not found."}}(),e.blog.pageTitle=e.page?.title||document.title;break;default:e.page=function(){const e=document.querySelector("div.neo-unknown-page");return{title:e?.querySelector("h1")?.textContent.trim()||"Unknown Page",message:e?.querySelector("p")?.textContent.trim()||"Unknown page type detected."}}(),e.blog.pageTitle=e.page?.title||document.title}}catch(n){if(console.error("neo-parser: Error during DOM parsing:",n),e.pageType="parsing_error",e.page={error:"Failed to parse page data from DOM.",details:n.message},!e.blog.title)try{e.blog=t()}catch(e){}}var o;return e.blog.url=window.location.href,e}window.neoApi=function(){return e||(e=o(),e)}}();const loadHandlebars=()=>new Promise(((e,t)=>{if(window.Handlebars)return e();const n=document.createElement("script");n.src="https://cdn.jsdelivr.net/npm/handlebars@latest/dist/handlebars.min.js",n.async=!0,n.onload=e,n.onerror=t,(document.head||document.documentElement).appendChild(n)})),neoRender=async e=>{if(e&&"string"==typeof e)try{await new Promise(((e,t)=>{if(window.Handlebars)return e();const n=document.createElement("script");n.src="https://cdn.jsdelivr.net/npm/handlebars@latest/dist/handlebars.min.js",n.async=!0,n.onload=e,n.onerror=t,(document.head||document.documentElement).appendChild(n)})),registerHelpers();const t=await(window.neoApi?.());if(!t)throw new Error("API data missing or invalid.");const n=Handlebars.compile(e)(t),o=(new DOMParser).parseFromString(n,"text/html"),r=o.body?.innerHTML,a=o.head?.childNodes;if(null==r)throw new Error("Could not parse body content from the rendered template.");a&&document.head?Array.from(a).forEach((e=>{document.head.appendChild(document.adoptNode(e))})):console.warn("Could not find new head nodes or existing document head to merge."),document.body.innerHTML=r,console.log("Page body replaced.")}catch(e){console.error("Failed to render page content:",e)}else console.error("neoRender requires a valid HTML template string as an argument.")};